version: '2'
services:
  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - private_network

  hadoop-master:
    container_name: hadoop-master 
    hostname: hadoop-master
    image: noustaa/custom_hadoop:latest
    stdin_open: true
    tty: true
    depends_on:
      - hadoop-slave1
      - hadoop-slave2
      - db
    command: > 
      bash -c "
        service ssh restart
        ./start-hadoop.sh
        python3 get_coins_history.py
        spark-submit --packages org.apache.spark:spark-streaming-kafka-0-10_2.11:2.4.8 --class projet.bigdata.KafkaSparkStream --master local[2] --driver-memory 4g --executor-memory 2g --executor-cores 1 KafkaSparkStream-1.0.jar
        bash"
    ports:
      - 9870:9870
      - 8088:8088
      - 8042:8042
      - 7077:7077
      - 16010:16010
    networks:
      - private_network

  hadoop-slave1:
    container_name: hadoop-slave1
    hostname: hadoop-slave1
    image: totofunku/bigdata-cours:latest
    stdin_open: true
    tty: true
    ports:
      - 8040:8042
    networks:
      - private_network

  hadoop-slave2:
    container_name: hadoop-slave2
    hostname: hadoop-slave2
    stdin_open: true
    tty: true
    image: totofunku/bigdata-cours:latest
    ports:
      - 8041:8042
    networks:
      - private_network

  kafka:
    container_name: kafka
    hostname: kafka
    image: noustaa/cryptoproj:latest
    depends_on:
      - zookeeper
      - db
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - private_network

  db:
    container_name: postgres_db
    hostname: postgres_db 
    image: postgres:latest
    environment:
      POSTGRES_DB: cryptoproj
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - private_network

  grafana:
    container_name: grafana
    hostname: grafana
    image: noustaa/custom_grafana:latest
    ports:
      - 3000:3000
    networks:
      - private_network
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - db
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/exported_dashboard.json"

volumes:
  grafana_data:
    driver: local
  postgres_data:
    driver: local

networks:
  private_network:
    driver: bridge